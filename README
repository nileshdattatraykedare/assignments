General Guidelines
Solutions for each question should be a runnable Python module
Should follow PEP-8 standards
Make use of Object Oriented Concepts wherever applicable
Try to solve as many as possible

Question 1

A two dimensional matrix can be represented in Python row-wise, as a list of lists: each inner list represents one row of the matrix.  For instance, the matrix  1  2  3 4  5  6   would be represented as [[1,2,3],[4,5,6]].  Write a Python function "matmult(m1,m2)" that takes as input two matrices using this row-wise representation and returns the matrix product m1*m2 using the same representation.
a = [[1,2,3],[4,5,6]]
b = [[1,4],[2,5],[3,6]]
c = matmult(a, b)
c = ?

Question 2

Scores of batsmen across a sequence of matches in a two level dictionary is represented as follows:  d = {'match1':{'player1':57, 'player2':38}, 'match2':{'player3':9, 'player1':42}, 'match3':{'player2':41, 'player4':63, 'player3':91}}
Define a Python function "orangecap(d)" that reads a dictionary d of this form and identifies the player with the highest total score.  
Your function should return a pair (playername,topscore) where playername is a string, the name of the player with the highest score, and topscore is an integer, the total score of playername

Question 3
Here are some basic facts about tennis scoring:
A tennis match is made up of sets.  A set is made up of games.
To win a set, a player has to win 6 games with a difference of 2 games.  At 6-6, there is often a special tie-breaker.  In some cases, players go on playing till one of them wins the set with a difference of two games.
Tennis matches can be either 3 sets or 5 sets.  The player who wins a majority of sets wins the match (i.e., 2 out 3 sets or 3 out of 5 sets)
The score of a match lists out the games in each set, with the overall winner's score reported first for each set.  Thus, if the score is 6-3, 5-7, 7-6 it means that the first player won the first set by 6 games to 3, lost the second one 5 games to 7 and won the third one 7 games to 6 (and hence won the overall match as well by 2 sets to 1).

You will read input from the keyboard (standard input) containing the results of several tennis matches.  Each match's score is recorded on a separate line with the following format:

Winner:Loser:Set-1-score,...,Set-k-score, where 2 <= k <= 5

For example, an input line of the form

Williams:Muguruza:3-6,6-3,6-3

indicates that Williams beat Muguruza 3-6, 6-3, 6-3 in a best of 3 set match.

You need to write a Python program that reads information about all the matches and compile the following statistics for each player:

Number of best-of-5 set matches won
Number of best-of-3 set matches won
Number of sets won
Number of games won
Number of sets lost
Number of games lost




You should print out to the screen (standard output) a summary in decreasing order of ranking, where the ranking is according to the criteria 1-6 in that order (compare item 1, if equal compare item 2, if equal compare item 3 etc, noting that for items 5 and 6 the comparison is reversed).

For instance, given the following data

Djokovic:Murray:2-6,6-7,7-6,6-3,6-1
Murray:Djokovic:6-3,4-6,6-4,6-3
Djokovic:Murray:6-0,7-6,6-7,6-3
Murray:Djokovic:6-4,6-4
Djokovic:Murray:2-6,6-2,6-0
Murray:Djokovic:6-3,4-6,6-3,6-4
Djokovic:Murray:7-6,4-6,7-6,2-6,6-2
Murray:Djokovic:7-5,7-5
Williams:Muguruza:3-6,6-3,6-3

your program should print out the following

Djokovic 3 1 13 142 16 143
Murray 2 2 16 143 13 142
Williams 0 1 2 15 1 12
Muguruza 0 0 1 12 2 15

Input Data
 
Djokovic:Murray:2-6,6-7,7-6,6-3,6-1
Murray:Djokovic:6-3,4-6,6-4,6-3
Djokovic:Murray:6-0,7-6,6-7,6-3
Murray:Djokovic:6-4,6-4
Djokovic:Murray:2-6,6-2,6-0
Murray:Djokovic:6-3,4-6,6-3,6-4
Djokovic:Murray:7-6,4-6,7-6,2-6,6-2
Murray:Djokovic:7-5,7-5
Williams:Muguruza:3-6,6-3,6-3
Muguruza:Williams:6-4,6-4
Williams:Muguruza:2-6,6-2,6-0
Muguruza:Williams:6-3,4-6,6-4,6-3
Williams:Muguruza:6-0,7-6,6-7,6-3
Muguruza:Williams:6-3,4-6,6-4,6-3
Williams:Muguruza:6-0,7-6,6-7,6-3
Muguruza:Williams:6-3,4-6,6-4,6-3
Williams:Muguruza:6-0,7-6,6-7,6-3

Question4

You are given a string A, tell how many contiguous character 'C' you can get in given string ? You are allowed to do at most "B" number of changes in the string. A change is defined as "change a character at any index in the given string".
  example: string A = "oyorooms"
          char C = 'o'
          int B = 1
          output - 4
          modified string would be - "oyooooms".

          string A = "abacus"
          char C = 'a'
          int n = 2
          output - 4
          modified string would be - "aaaaus".
Note : In function Character C is being passed through a String of length 1.

Question 5

You are given a string S. You have to modify it such that all the characters having prime Ascii value come before those having non-prime Ascii value.
All characters having prime Ascii value come in ascending order and those having non-prime Ascii value come in descending order.
Note: you have to do this in constant memory.
Input Format
Given only argument A of type String.
Output Format
Return a String B, i.e. modified string
Constraints

1 <= length(S) <= 1e5
For Example
Input:
    abC5AB1
Output:
    5CabBA1
Explanation:
    Ascii values of all characters are
    a = 97
    b = 98
    C = 67
    5 = 53
    A = 65
    B = 66
    1 = 49
    according to question all characters with prime Ascii value come first in ascending order and non-primes in descending order
    So primes in ascending order: 5(53), C (67), a(97)
    non-primes in descending order: b (98), B(66), A(65), 1(49)
